{"version":3,"sources":["Components/CartIcon.js","Components/ ProductItem.js","api/products.js","pages/Products.js","Components/CartItem.js","store/actions/actions.js","store/actions/types.js","pages/Cart.js","pages/Product.js","store/store.js","store/reducers/index.js","App.js","index.js"],"names":["connect","state","totalQuantity","cart","reduce","total","item","parseInt","quantity","Props","id","to","className","ProductItem","props","product","src","image","alt","name","price","getById","productJson","find","Promise","resolve","getAll","Products","products","productsApi","then","data","setState","console","log","this","map","key","Component","dispatch","removeFromCart","index","type","onClick","Cart","pay","alert","cartItems","CartItem","React","Product","loading","handleQuantity","event","value","target","addToCart","match","params","width","description","onChange","productsInfo","productInfo","store","createStore","action","item_index","new_state","window","__REDUX_DEVTOOLS_EXTENSION__","App","shop","prompt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","path","component","exact","AppWithStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.428e744f.chunk.js","sourcesContent":["import React from 'react'\nimport './CartIcon.css'\nimport { Link}from 'react-router-dom'\nimport {connect}from 'react-redux'\n\n\n function CartIcon(Props){\n    return<div id='cart-icon'>\n        <Link to ='/cart'>\n        \n        <i className='fa fa-shopping-cart'></i>\n <span className='badge badge-danger'>{Props.totalQuantity}</span>\n            </Link>\n        </div>\n    \n}\nconst mapStateToProps =(state)=>{\nreturn{\n    totalQuantity : state.cart.reduce((total, item)=>total + parseInt(item.quantity), 0),\n}\n}\n\nexport default connect(mapStateToProps)(CartIcon)","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nfunction ProductItem(props) {\n  const { product } = props;\n  return (\n    <div className=\"card\">\n      <img src={product.image} className=\"card-img-top\" alt=\"\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\"> {product.name}</h5>\n        <p className=\"card-text\">Price:{product.price}$</p>\n        \n        <Link to={\"/products/\" + product.id} className=\"btn btn-primary\">\n          Details\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import productJson from \"./product.json\";\n\nexport function getAll() {\n  return Promise.resolve(productJson);\n}\n\nexport function getById(id) {\n  const product = productJson.find((item) => item.id === id);\n  return Promise.resolve(product);\n}\nexport default {\n  getAll,\n  getById,\n};\n","import React, { Component } from \"react\";\nimport ProductItem from \"../Components/ ProductItem\";\nimport productsApi from \"../api/products\";\n\nclass Products extends Component {\n  state = {\n    products: [],\n  };\n\n  componentDidMount() {\n    productsApi.getAll().then((data) => {\n      this.setState({\n        products: data,\n      });\n      console.log({ data });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1> Products</h1>\n        <div className=\"row\">\n          {this.state.products.map((product) => (\n            <div className={\"col-4\"} key={product.id}>\n              <ProductItem product={product} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","import React from \"react\";\n//  import { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport {connect} from 'react-redux';\nimport {removeFromCart}from '../store/actions/actions'\n\nfunction ProductItem(props) {\n  const { item ,index} = props;\n  const { product } = item;\n  \n\n  return (\n    <div className=\"card\">\n\n      <img src={product.image} className=\"card-img-top\" alt=\"\" />\n\n      <div className=\"card-body\">\n\n        <h5 className=\"card-title\"> {product.name}</h5>\n\n        <p className=\"card-text\"> Price{product.price}$</p>\n\n        <br></br>\n\n         <p> Quantity:{item.quantity}</p>\n\n        <br></br>\n\n        <p>Total:{item.quantity * product.price}$</p>\n \n        {/* { <Link to={\"/Cart/\" + product.id} className=\"btn btn-danger\">\n\n         <i className='fa fa-trash'></i>\n          Delete\n        </Link> } */}\n\n         <button onClick={() =>props.removeFromCart(index)} className=\"btn btn-danger\">\n             <i className='fa fa-trash'></i>\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      removeFromCart: (index) => dispatch(removeFromCart(index)),\n  };\n}\n\nexport default connect(null,mapDispatchToProps)(ProductItem);"," \n\n \nimport {ADD_TO_CART,REMOVE_FROM_CART }from './types';\n\nexport function addToCart(productInfo, quantity){\n    return {\n        type: ADD_TO_CART,\n        productInfo, \n        quantity\n    }\n}\n\nexport function removeFromCart(index){\n    return {\n        type: REMOVE_FROM_CART,\n        index\n    }\n}\n\n "," \n\nexport const ADD_TO_CART = 'ADD_TO_CART';\n export const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\n "," \n\n\nimport React from \"react\";\nimport CartItem from \"../Components/CartItem\";\n  \nimport {connect} from \"react-redux\";\n\nclass Cart extends React.Component{\n    pay =()=>{\n        alert('Sorry...   ,your Balance is Empty....');\n    }\n    render(){\n        return (\n            <div>\n                <h1>Cart</h1>\n\n                <div className=\"row\">\n                    {this.props.cartItems.map((item,index) => \n                        <div className={'col-3'} key={item.product.id}>\n                            <CartItem item={item} index={index}/>\n                        </div>\n                    )}\n                </div>\n\n                <br />\n                <h3>\n                    Total: {this.props.total}\n                </h3>\n\n                <button className=\"btn btn-primary btn-block\" onClick= {this.pay}>Pay</button>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log({state})\n    return {\n        cartItems: state.cart,\n        total: state.cart.reduce((total, item) => total + item.quantity * item.product.price, 0),\n    };\n}\n\n\nexport default connect(mapStateToProps)(Cart);\n\n\n"," \n\nimport React from \"react\";\nimport {getById} from \"../api/products\";\nimport {addToCart} from \"../store/actions/actions\";\nimport {connect} from \"react-redux\";\n\nclass Product extends React.Component{\n\n    state={\n        loading: true,\n        quantity: 0,\n        product: {}\n    };\n\n    componentDidMount(){\n        const id = this.props.match.params.id;\n\n        getById(parseInt(id))\n            .then(product => {\n                this.setState({\n                    product,\n                    loading: false\n                });\n            })\n    }\n\n    handleQuantity = (event) => {\n        const value = event.target.value;\n\n         if(value < 0)\n             return ;\n\n        this.setState({\n            quantity: value\n        })\n    }\n\n    addToCart = (product) => {\n        this.props.addToCart(product, this.state.quantity);\n    }\n\n    render(){\n        if(this.state.loading)\n            return 'Loading ..';\n\n        const product = this.state.product;\n        const quantity = this.state.quantity;\n\n        return (\n            <div>\n                <div className={'row'}>\n                    <div className=\"col-6\">\n                        <img src={product.image} width={'100%'} alt='...'/>\n                    </div>\n                    <div className=\"col-6\">\n                    <h1>{product.name}</h1>\n\n                        <p>Price: {product.price}$</p>\n\n                        <p>{product.description}</p>\n\n\n                        <input type=\"number\" value={quantity} onChange={this.handleQuantity} />\n                        \n                        <br /><br />\n\n                        <p>Total: {quantity * product.price}</p>\n\n                        <button className=\"btn btn-primary\" onClick={() => this.addToCart(product)}>\n                            Add to Cart\n                        </button>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addToCart: (productsInfo, quantity) => dispatch(addToCart(productsInfo, quantity)),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Product);"," \n\n\n\nimport {createStore} from \"redux\";\nimport cartReducer from \"./reducers\";\n\nconst initialState = {\n    cart: [\n      \n    ]\n};\n\nconst store = createStore(cartReducer, initialState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","\nimport { ADD_TO_CART,REMOVE_FROM_CART } from \"../actions/types\";\n\nexport default function cartReducer(state, action){\nconsole.log(state, action)\n\n    switch(action.type){\n        case ADD_TO_CART: {\n            return {\n                cart: [\n                    ...state.cart,\n                    {\n                        product: action.productInfo,\n                        quantity: action.quantity\n                    }\n                ]\n            }\n        }\n        case REMOVE_FROM_CART: {\n            const item_index = action.index;\n            const new_state = {...state};\n            delete new_state.cart[item_index];\n            return new_state\n        }\n\n        default:\n            return state;\n    }\n}\n\n\n\n\n\n ","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport CartIcon from './Components/CartIcon'\nimport './App.css'\n \nimport Products from \"./pages/Products\";\nimport Cart from \"./pages/Cart\";\nimport Product from \"./pages/Product\";\nimport {Provider}from 'react-redux';\nimport store from './store/store';\n\nclass App extends Component {\n\n shop=()=>{\nprompt('YOU ARE WELCOME')\n }\n  render(){\n\n  return (\n  \n    <Router>\n      <div className=\"container\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a className=\"navbar-brand\" onClick= {this.shop}>\n            Shopping Cart\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n             \n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/products\">\n                  Products\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/Cart\">\n                  Cart\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          <CartIcon/>\n        </nav>\n\n       \n        <Route path=\"/products\" component={Products} exact />\n        <Route path=\"/products/:id\" component={Product} />\n        <Route path=\"/cart\" component={Cart} />\n      </div>\n               <h2 className='thank'>Thank you for your Visit</h2>\n    </Router>\n    \n  );\n}\n}\nfunction AppWithStore(){\n  return <Provider store={store}>\n      <App/>\n    </Provider>\n  \n}\n\n\nexport default AppWithStore;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport App from './App';\n \n\nReactDOM.render(\n \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n "],"sourceRoot":""}